image: gradle:6.8.2

options:
  docker: true

definitions: 
   steps:
     - run-tests: &run-tests
       - step: 
           name: Run tests
           caches:
             - gradle
             - maven
             - docker
           services:
             - postgres
           script:
             - gradle test -Dspring.profiles.active=bitbucket --stacktrace --info
           after-script:
             - pipe: atlassian/checkstyle-report:0.2.0
           artifacts: 
             - osk-flows/build/reports/tests/**
             - koderia-flows/build/reports/tests/**
             - functions/build/reports/tests/**
     - build-jar: &build-jar
       - step:
           name: Build FAT Jar
           caches:
            - gradle
            - maven
           script:
             - gradle build -x test --stacktrace --info   
           artifacts:
             - osk-flows/dist/**
             - koderia-flows/dist/**
     - deploy-2-gcr: &deploy-2-gcr
         - step:
             name: Build Docker Image
             caches:
               - gradle
               - maven
             script:
               # build docker image
               - cp -a koderia-flows/dist/ koderia-flows/docker/
               - chown -R 1000:1000 koderia-flows/docker/
               - docker build -t eu.gcr.io/objectify-infra/koderia-flows koderia-flows/docker/
               - docker save --output built-image.docker eu.gcr.io/objectify-infra/koderia-flows
             artifacts:
               - built-image.docker
         - step:
             name: Tag Docker Image
             caches:
               - docker
             script:
               - docker load --input ./built-image.docker
               - export SUFFIX=$([[ ! -z "$BITBUCKET_TAG" ]] && echo ":$BITBUCKET_TAG" || echo "") # tag name or  "" (latest) on master branch 
               - export IMAGE_NAME=eu.gcr.io/objectify-infra/koderia-flows${SUFFIX}
               - docker tag eu.gcr.io/objectify-infra/koderia-flows ${IMAGE_NAME}
               - docker save --output tagged-image.docker ${IMAGE_NAME}
               - echo export IMAGE_NAME=$IMAGE_NAME > shared_vars.sh # trick to share ENV variables between steps
             artifacts:
               - tagged-image.docker
               - shared_vars.sh
         - step:
             name: Push Docker Image
             caches:
               - docker
             script:
               - source shared_vars.sh # trick to share ENV variables between steps
               - docker load --input ./tagged-image.docker
               - cat koderia-flows/gcr/gcr-push-sa-key.json | docker login -u _json_key --password-stdin https://eu.gcr.io
               - docker push ${IMAGE_NAME}
     - deploy-snaphost-2-BB: &deploy-2-BB
       - step: 
           name: Deploy snapshot to Bitbucket downloads
           script:
             - pipe: atlassian/bitbucket-upload-file:0.3.2
               variables:
                 BITBUCKET_USERNAME: $BITBUCKET_USERNAME
                 BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
                 FILENAME: "osk-flows/dist/*.jar"
   services: 
     postgres: 
       image: postgres 
       variables: 
         POSTGRES_DB: 'nc' 
         POSTGRES_USER: 'nc'
         POSTGRES_PASSWORD: 'ZMss4o9mdBLV'



pipelines:
  branches: 
    develop:
      - <<: *run-tests
    master:
      - <<: *run-tests
    release/*:
      - <<: *run-tests
      - <<: *build-jar
      - <<: *deploy-2-gcr
      - <<: *deploy-2-BB
  tags:
    v*:
      - <<: *build-jar
      - <<: *deploy-2-gcr
      - <<: *deploy-2-BB