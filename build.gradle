plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'maven-publish'
	id 'net.nemerosa.versioning' version '2.14.0'
	id 'java-library'
}

group = 'objectify'
sourceCompatibility = '1.8'

if (versioning.info.tag && !versioning.info.dirty) {
	
	version = extractVersionFromTag(versioning.info.tag, false)
	println 'Commit tagged and no uncommited changes. CREATING FINAL VERSION ' + version
}
else {
	version = extractVersionFromTag(versioning.info.lastTag, true)
	println 'Commit not tagged or not all changes commited. CREATING SNAPSHOT VERSION ' + version
}

dependencies {
	api 'org.springframework.boot:spring-boot-starter-integration'
	api 'org.springframework.boot:spring-boot-starter-data-jdbc'
	api 'org.springframework.boot:spring-boot-starter-validation'
	api 'org.springframework.boot:spring-boot-starter-mail'
	api 'org.springframework.boot:spring-boot-starter-thymeleaf'
	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-actuator'
	api 'org.springframework.boot:spring-boot-starter-security'
	api 'org.springframework:spring-test'

	api 'com.google.guava:guava:30.1.1-jre'

	api 'io.jsonwebtoken:jjwt:0.9.1'
	api 'org.apache.commons:commons-email:1.5'
	api 'org.apache.commons:commons-lang3:3.12.0'
	api 'org.apache.commons:commons-text:1.9'
	api 'commons-codec:commons-codec:1.15'

	api 'org.jsoup:jsoup:1.13.1'

	api 'io.rest-assured:json-schema-validator:4.2.0'
	api 'org.assertj:assertj-core'

	api 'org.postgresql:postgresql'
	api 'org.flywaydb:flyway-core'

	api 'com.icegreen:greenmail:1.6.3'
	api 'com.icegreen:greenmail-junit5:1.6.3'

	api 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation 'org.awaitility:awaitility'

	testImplementation 'commons-jxpath:commons-jxpath:1.3'
	testImplementation 'io.rest-assured:rest-assured:4.2.0'
	testImplementation 'io.rest-assured:json-path:4.2.0'
	testImplementation 'io.rest-assured:xml-path:4.2.0'
	testImplementation 'io.rest-assured:rest-assured-common:4.2.0'
	testImplementation 'io.rest-assured:spring-mock-mvc:4.2.0'
	testImplementation 'commons-jxpath:commons-jxpath:1.3'
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}

test {
	systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
	useJUnitPlatform()
}

repositories {
	maven {
		url 'https://plugins.gradle.org/m2/'
	}
	maven {
		url nexusPublic
		credentials {
			username nexusUsername
			password nexusPassword
		}
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			url version.endsWith('-SNAPSHOT') ? nexusSnapshots : nexusReleases

			credentials {
				username nexusUsername
				password nexusPassword
			}
		}
	}
}

def extractVersionFromTag(tagLabel, snapshot) {
	def matcher = tagLabel =~ /v(\d+).(\d+).(\d+)/
		
	if (matcher.size() == 0) return "0.0.1" + (snapshot ? "-SNAPSHOT" : "")
	if (matcher[0].size() != 4) println("Tag " +  tagLabel + " is not in form of v9.9.9. Matched: " + matcher[0])

	if (snapshot) {
		return matcher[0][1] + "." + matcher[0][2] + "." + (matcher[0][3].toInteger() + 1) + "-SNAPSHOT"
	} else {
		return matcher[0][1] + "." + matcher[0][2] + "." + matcher[0][3]
	}
}
