@startuml

!theme cerulean-outline

left to right direction

skinparam component {
    backgroundColor<<user defined>> LightGray
}

database "PostgreSQL" {
    [nc_intent]
    [nc_endpoint]
}

database "Topic/Channels" {
    component INTENT_PROCESSING_FLOW_ID_INPUT<<PUB/SUB>>[
        MESSAGE_PROCESSING_FLOW_ID_INPUT
        --
        (Message)
    ]

    component EMAIL_SEND_ROUTING_FLOW_ID_INPUT<<PUB/SUB>>[
        EMAIL_SEND_ROUTING_FLOW_ID_INPUT
        --
        (EmailMessage)   
    ]

    component EMAIL_FORMAT_AND_SEND_ROUTING_FLOW_ID_INPUT<<PUB/SUB>>[
        EMAIL_FORMAT_AND_SEND_ROUTING_FLOW_ID_INPUT
        --
        (EmailMessageTemplated)
    ]

    component SMS_PROCESSING_FLOW_ID_INPUT<<PUB/SUB>>[
        SMS_PROCESSING_FLOW_ID_INPUT
        --
        (SmsMessageTemplated)
    ]

    component MAILCHIMP_PROCESSING_FLOW_ID_INPUT<<PUB/SUB>>[
        MAILCHIMP_PROCESSING_FLOW_ID_INPUT
        --
        (MailChimpMessage)
    ]
}

node "NotificationIntentProcessingFlow" {
    [endpointPersister]
    [notificationIntentPersister]
    [splitter]

    [generateMessagesFromIntent]
    [typeBasedRouter]

    endpointPersister .l.> notificationIntentPersister: read (NotificationIntent)
    notificationIntentPersister -l-> generateMessagesFromIntent: (NotificationIntent)
    generateMessagesFromIntent -l-> splitter: (List<Message>)
    splitter -l-> typeBasedRouter: (Message)

    note top of typeBasedRouter 
    IF message instanceof  
        [EmailMessage
        EmailMessageTemplated
        SmsMessageTemplated
        MailChimpMessage]
    end note  

    endpointPersister ..> INTENT_PROCESSING_FLOW_ID_INPUT : read (NotificationIntent) 
    typeBasedRouter ---> EMAIL_SEND_ROUTING_FLOW_ID_INPUT: write (EmailMessage)
    typeBasedRouter ---> EMAIL_FORMAT_AND_SEND_ROUTING_FLOW_ID_INPUT: write (EmailMessageTemplated)
    typeBasedRouter ---> SMS_PROCESSING_FLOW_ID_INPUT: write (SmsMessageTemplated)
    typeBasedRouter ---> MAILCHIMP_PROCESSING_FLOW_ID_INPUT: write (MailChimpMessage)

    notificationIntentPersister -u-> nc_intent: write (List<DeliveryInfo>)
    endpointPersister -u-> nc_endpoint: write (List<RecievingEndpoint>)

}


@enduml