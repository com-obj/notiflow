plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'    
}

group = 'com.obj.nc'
sourceCompatibility = '1.8'
version = '1.0.0'

bootJar {
    archiveBaseName = 'osk-flows'
    archiveVersion =  '1.0.0'

    launchScript()
}

ext {
    set('testcontainersVersion', "1.15.1")
    set('junitJupiterVersion', '5.7.0')
}

dependencies {
    implementation project(':functions')

    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation "org.springframework.integration:spring-integration-jdbc"

    /* copy/paste from functions.. not sure how to pull it from there, this might help: https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_separation*/
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	implementation 'org.springframework.data:spring-data-jdbc'
	/* to here */
    
    //app-engine
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    
	testImplementation 'commons-jxpath:commons-jxpath:1.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
 /*   testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.platform:junit-platform-runner'*/

    testImplementation 'io.rest-assured:rest-assured:4.2.0'
    testImplementation 'io.rest-assured:json-path:4.2.0'
    testImplementation 'io.rest-assured:xml-path:4.2.0'
    testImplementation 'io.rest-assured:rest-assured-common:4.2.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.2.0'
    testImplementation 'io.rest-assured:json-schema-validator:4.1.2'

    testImplementation 'com.icegreen:greenmail-junit5:1.6.0'
    testImplementation(testFixtures(project(":functions")))
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.junit:junit-bom:${junitJupiterVersion}"
    }
}


task copyFatJarToDistFolder(type: Copy) {
    from bootJar // shortcut for bootJar.outputs.files
    into "dist"
}

task copyResourcesToDistFolder(type: Copy) {
    from('src/main/resources')
    into 'dist/resources'
}

build.dependsOn copyFatJarToDistFolder
build.dependsOn copyResourcesToDistFolder

repositories {
    mavenCentral()
}

test {
    systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
    useJUnitPlatform()
}

//tento cirkus musim robit koly velmi zvlastnemu chovaniu v BB pipelines. Niektore testy (complex tests) obcas padaju
//a zda sa, ze to suvisi s spring context caching. toto je trik ako rozdelim na dve skupiny pricom sring context sa urcite nereusne
task simpleTest(type: Test) {
	systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
    useJUnitPlatform {
        excludeTags 'test-mode'
    }
}

task complexTest(type: Test) {
	systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
    useJUnitPlatform {
        includeTags 'test-mode'
    }
}

