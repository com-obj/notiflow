plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
}

bootJar {
    archiveFileName = 'osk-flows.jar'
}

group = 'com.obj.nc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.15.1")
    set('springCloudVersion', "Hoxton.SR8")
    set('springIntegrationVersion', "5.1.3.RELEASE")
    set('junitJupiterVersion', '5.4.2')
}

dependencies {
    implementation project(':functions')

    implementation 'org.springframework.boot:spring-boot-starter-integration'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    testImplementation 'org.springframework.integration:spring-integration-test'

    testImplementation 'org.json:json:20201115'

    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testCompile 'org.junit.jupiter:junit-jupiter-params'
    testCompile 'org.junit.platform:junit-platform-launcher'
    testCompile 'org.junit.platform:junit-platform-runner'

    testImplementation 'com.icegreen:greenmail-spring:1.6.0'
    testImplementation(testFixtures(project(":functions")))
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.integration:spring-integration-bom:${springIntegrationVersion}"
        mavenBom "org.junit:junit-bom:${junitJupiterVersion}"
    }
}

test {
    systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
    useJUnitPlatform()
}

task copyDistToStagingFolder(type: Copy) {
    from bootJar // shortcut for bootJar.outputs.files
    into "./../docker/osk-flows/dist"
}

build.dependsOn copyDistToStagingFolder
