plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'java-test-fixtures'
}

group = 'com.obj.nc.functions'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

bootJar {
	enabled = false
}

jar {
	enabled = true
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('testcontainersVersion', "1.15.1")
	set('springCloudVersion', "Hoxton.SR8")
	set('springIntegrationVersion', "5.1.3.RELEASE")
	set('junitJupiterVersion', '5.4.2')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	
	implementation 'org.springframework.data:spring-data-jdbc'

	implementation 'com.icegreen:greenmail:1.6.0'
	testImplementation 'com.icegreen:greenmail-junit5:1.6.0'
	implementation 'org.apache.commons:commons-email:1.5'

	//add reactive support
	implementation 'org.springframework.cloud:spring-cloud-function-context'
	implementation 'org.springframework.boot:spring-boot-starter-integration'
	
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.json:json:20200518'
	implementation 'org.postgresql:postgresql'

	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.integration:spring-integration-test'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		exclude group: "com.vaadin.external.google", module:"android-json"
	}
	  
    testImplementation 'commons-jxpath:commons-jxpath:1.3'
	
	testCompile 'org.junit.jupiter:junit-jupiter-api'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine' 
    testCompile 'org.junit.jupiter:junit-jupiter-params' 
    testCompile 'org.junit.platform:junit-platform-launcher' 
    testCompile 'org.junit.platform:junit-platform-runner'

	testFixturesImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		exclude group: "com.vaadin.external.google", module:"android-json"
	}
	testFixturesImplementation "org.testcontainers:testcontainers"
	testFixturesImplementation "org.testcontainers:junit-jupiter"
	testFixturesImplementation 'org.testcontainers:postgresql'
	testFixturesImplementation 'org.flywaydb:flyway-core'
	
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.junit:junit-bom:${junitJupiterVersion}"
		mavenBom "org.springframework.integration:spring-integration-bom:${springIntegrationVersion}"
	}
}

test {
	systemProperty "spring.profiles.active", System.getProperty("spring.profiles.active")
	useJUnitPlatform()
}
